// Relabel Button Plugin (cmd k)
/*
  Author: Ken Moore (with bits from Alexander Kudymov's Dynamic Button plugin)
  Date: 11 January 2015
  Version: 0.2

  The Relabel Button plugin lets you easily change the label of any button 
  (a group containing a text layer and a background layer and possibly other 
  visual elements). Just select the group and press Cmd+K, type the new label
  into the prompt, and the button is resized to fit the new text with prior
  padding preserved.   
*/

// Display an error alert
function alert(msg, title) {
  title = title || "alert";
  var app = [NSApplication sharedApplication];
  [app displayDialog:msg withTitle:title];
}

// Derive the padding between the text layer and the background layers
function getButtonPadding(bgLayer, textLayer) {
  var bgFrame = [bgLayer frame];
  var textFrame = [textLayer frame];

  return {
    top: [textFrame y] - [bgFrame y],
    right: ([bgFrame x] + [bgFrame width]) - ([textFrame x] + [textFrame width]),
    bottom: ([bgFrame y] + [bgFrame height]) - ([textFrame y] + [textFrame height]),
    left: [textFrame x] - [bgFrame x]
  }
}

// Set the new padding (resize the background layer and reposition any layers to the
// right of the text layer's left edge)
function setButtonPadding(bgLayer, textLayer, layers, padding) {
  var bgFrame = [bgLayer frame];
  var textFrame = [textLayer frame];

  var newWidth = padding.left + [textFrame width] + padding.right;
  var newHeight = padding.top + [textFrame height] + padding.bottom;

  // determine how much the background is changing
  var deltaWidth = newWidth - [bgFrame width];

  [bgFrame setWidth:newWidth];
  [bgFrame setHeight:newHeight];

  // now loop through the layers and reposition any layer which isn't bgLayer (index 0) or textLayer
  for (var i = 1; i < [layers length]; i++) {
    var layer = [layers objectAtIndex:i];
    var layerFrame = [layer frame];

    if ([layerFrame x]  > [textFrame x]) {
      [layerFrame addX:deltaWidth];
    }

  }
}

// Display an error alert and exit
function invalidSelection() {
  alert('Select the group layer of the button to modify (it must be a group containing at least one text layer and one background layer).', 'Select group');
  exit;
}


// Begin validation of selection
// Ensure there's only one layer selected
if ([selection count] != 1) {
  invalidSelection();
}

var group = [selection objectAtIndex:0];

// Ensure the selected layer is a group
if (!(group instanceof MSLayerGroup)) {
  invalidSelection();
}

var layers = [group layers];

// Ensure there are at least 2 layers in the group (text and background layer at minimum)
if ([layers length] < 2) {
  invalidSelection();
}

// Loop through child layers to identify the text layer
var textLayer = nil;
for (var i = 1; i < [layers length]; i++) {
  var layer = [layers objectAtIndex:i];
  if (layer instanceof MSTextLayer) {
    textLayer = layer;
    break;
  }
}

// Ensure at least one text layer exists
if (!textLayer) {
  invalidSelection();
}

// The bg layer is the bottommost layer (index 0)
var bgLayer = [layers objectAtIndex:0];

// End validation of selection

// Extract current padding based on bgLayer and textLayer
var buttonPadding = getButtonPadding(bgLayer, textLayer);

// Prompt user for input of new button text
var text = [doc askForUserInput:"New button text" initialValue:[textLayer stringValue]];

// Only forge on if user didn't press Cancel
if (text) {
  // If the text layer is fixed width, make it auto
  if ([textLayer textBehaviour] == 1) {
    [textLayer setTextBehaviour:0];
  }

  // Set the text layer to the new text
  [textLayer setStringValue: text];
  [textLayer adjustFrameToFit];

  // Resize the button based on the original padding
  setButtonPadding(bgLayer, textLayer, layers, buttonPadding);
  group.resizeRoot(true); // resize the group field

  // Done!  
}
